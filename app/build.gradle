
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

//获取打包的时间
def releaseTime() {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmm");
    String s = sdf.format(new Date())
    return s
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.liuchuanzheng.xinlikuangjia"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias 'medical'
            keyPassword '123456'
            storeFile file('../keys/medical.keystore')
            storePassword '123456'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField 'boolean', 'LOG', 'false'
        }
        debug {
            signingConfig signingConfigs.release
            buildConfigField 'boolean', 'LOG', 'true'
        }
    }
    productFlavors {
        urlTest {
            signingConfig signingConfigs.release
            buildConfigField 'String', 'SERVER_URL', '"http://58.30.9.142:43143/"'

        }
        urlRelease {
            signingConfig signingConfigs.release
            buildConfigField 'String', 'SERVER_URL', '"http://www.release.com"'

        }

    }
    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions 'default'



    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def finalApkName = "心理_${variant.productFlavors[0].name}_${variant.buildType.name}_v${defaultConfig.versionName}_${releaseTime()}.apk"
            outputFileName = finalApkName
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //以下为自引用三方库

    //<<<<<<<<<<<<<<<<<<1【start】logger<<<<<<<<<<<<<<<<<<<<<<

    //   地址：https://github.com/orhanobut/logger
    //打log的著名库，使用方便，格式美观，便于管理。
    implementation 'com.orhanobut:logger:2.2.0'

    //<<<<<<<<<<<<<<<<<<1【end】logger<<<<<<<<<<<<<<<<<<<<<<<<<


    //>>>>>>>>>>>>>>>>>>2【start】butterknife>>>>>>>>>>>>>>>>>>

    //   地址：https://github.com/JakeWharton/butterknife
    // 便于快速找到xml中的控件，代替findviewbyid
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //>>>>>>>>>>>>>>>>>>2【end】butterknife>>>>>>>>>>>>>>>>>>>>

    //<<<<<<<<<<<<<<<<<<3【start】glide<<<<<<<<<<<<<<<<<<

    //   地址：https://github.com/bumptech/glide
    // 图片加载
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    //<<<<<<<<<<<<<<<<<<3【end】glide<<<<<<<<<<<<<<<<<<

    //>>>>>>>>>>>>>>>>>>4【start】RxAndroid>>>>>>>>>>>>>>>>>>

    //   地址：https://github.com/ReactiveX/RxAndroid
    // 响应式编程
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Because RxAndroid releases are few and far between, it is recommended you also

    // explicitly depend on RxJava's latest version for bug fixes and new features.

    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'

    //>>>>>>>>>>>>>>>>>>4【end】RxAndroid>>>>>>>>>>>>>>>>>>

    //<<<<<<<<<<<<<<<<<<5【start】retrofit2<<<<<<<<<<<<<<<<<<

    //   地址：https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    //用到okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.14.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.0'
    //用到gson转换，来配合使用okhttp
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    //<<<<<<<<<<<<<<<<<<5【end】retrofit2<<<<<<<<<<<<<<<<<<<<<

    //>>>>>>>>>>>>>>>>>>6【start】SmartRefreshLayout>>>>>>>>>>>>>>>>>>

    //   地址：https://github.com/scwang90/SmartRefreshLayout
    // 下拉刷新库

    //1.1.0 API改动过大，老用户升级需谨慎
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-18'
    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-18'

    //>>>>>>>>>>>>>>>>>>6【end】SmartRefreshLayout>>>>>>>>>>>>>>>>>>

    //<<<<<<<<<<<<<<<<<<7【start】BaseRecyclerViewAdapterHelper<<<<<<<<<<<<<<<<<<

    //   地址：https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    //   recyclerview的适配器库
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'

    //<<<<<<<<<<<<<<<<<<7【end】BaseRecyclerViewAdapterHelper<<<<<<<<<<<<<<<<<<

    //>>>>>>>>>>>>>>>>>>>>8【start】RxPermissions>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    //   地址：https://github.com/tbruyelle/RxPermissions
    //   6.0权限申请
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'

    //>>>>>>>>>>>>>>>>>>>8【end】RxPermissions>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    //<<<<<<<<<<<<<<<<<<9【start】rxlifecycle<<<<<<<<<<<<<<<<<<

    //   地址：https://github.com/trello/RxLifecycle
    //   用于处理使用RxJava导致页面生命周期造成的内存泄漏问题
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'

    //<<<<<<<<<<<<<<<<<<9【end】rxlifecycle<<<<<<<<<<<<<<<<<<

    //>>>>>>>>>>>>>>>>>>>10【start】ImmersionBar>>>>>>>>>>>>>>>>>>>

    // android 4.4以上沉浸式状态栏和沉浸式导航栏管理，包括状态栏字体颜色，一句代码轻松实现，以及对bar的其他设置

    //   地址：implementation 'com.gyf.immersionbar:immersionbar:2.3.3-beta09'
    implementation 'com.gyf.immersionbar:immersionbar:2.3.3-beta09'

    //>>>>>>>>>>>>>>>>>>>10【end】ImmersionBar>>>>>>>>>>>>>>>>>>>

    //<<<<<<<<<<<<<<<<<<11【start】AndroidUtilCode<<<<<<<<<<<<<<<<<<

    //   地址：https://github.com/Blankj/AndroidUtilCode
    //  通用工具类库
    implementation 'com.blankj:utilcode:1.22.0'

    //<<<<<<<<<<<<<<<<<<11【end】AndroidUtilCode<<<<<<<<<<<<<<<<<<

    //>>>>>>>>>>>>>>>>>>>12【start】recyclerview>>>>>>>>>>>>>>>>>>>

    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'

    //>>>>>>>>>>>>>>>>>>>12【end】recyclerview>>>>>>>>>>>>>>>>>>>

    //<<<<<<<<<<<<<<<<<<13【start】xpopup<<<<<<<<<<<<<<<<<<

    //   地址：https://github.com/li-xiaojun/XPopup
    //  功能强大，UI简洁，交互优雅的通用弹窗！可以替代Dialog，PopupWindow，PopupMenu，BottomSheet，DrawerLayout，Spinner等组件，
    //  自带十几种效果良好的动画， 支持完全的UI和动画自定义！
    //  (Powerful and Beautiful Popup，can absolutely replace Dialog，PopupWindow，PopupMenu，BottomSheet，DrawerLayout，Spinner. With built-in animators , very easy to custom popup view.)
    implementation 'com.lxj:xpopup:1.7.10'
    //for androidx.
    implementation 'com.lxj:xpopup:1.7.10-x'

    //<<<<<<<<<<<<<<<<<<13【end】xpopup<<<<<<<<<<<<<<<<<<


}
